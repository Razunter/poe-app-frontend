---
import BuildList from '@src/components/BuildList.astro'
import type {GetStaticPathsItem} from 'astro'
import sprite from 'src/components/svgsprite'
import versionsData from 'src/data/versions.json'
import Layout from 'src/layouts/Layout.astro'

// eslint-disable-next-line func-style
export async function getStaticPaths() {
  return structuredClone(versionsData.versions)
    .reverse()
    .map((mapVersion) => {
      return {
        params: {
          version:
            mapVersion.version === versionsData.currentVersion
              ? undefined
              : 'old-' + mapVersion.version + '.html',
        },
        props: {
          currentVersionData: mapVersion,
        },
      } as GetStaticPathsItem
    })
}

const {currentVersionData: version} = Astro.props as {
  currentVersionData: VersionType
}

const thisVersionNumber = version.version
const title = `Path of Exile ${thisVersionNumber} «${version.name}» starter builds collection (Razunter's picks)`
const description = `Quick preview of starter builds for Path of Exile v${thisVersionNumber} ${version.name}, collected by Razunter`
const reformattedVersionNumber = thisVersionNumber.replaceAll('.', '-')
const data = (await import(
  `../data/data-${reformattedVersionNumber}.json`
)) as VersionDataType
const currentTypes = Object.entries(data.types)
const svgSprite = await sprite()

let pageHeaderVersion = `${thisVersionNumber} «${version.name}»`
if (version.url) {
  pageHeaderVersion = `<a href="${version.url}" target="_blank" rel="noopener noreferrer">${pageHeaderVersion}</a>`
}
---

<Layout title={title} description={description}>
  <Fragment slot="nav">
    <div hidden set:html={svgSprite} />
    <nav class="mainnav" aria-label="Main navigation">
      <ul>
        {
          currentTypes.map(([typekey, typename]) => {
            return (
              <>
                {(typekey !== 'rf' || !version.skiprf) && (
                  <li>
                    <a href={'#' + typekey} title={typename}>
                      <svg class="icon" role="img" aria-hidden="true">
                        <use xlink:href={'#icon-' + typekey} />
                      </svg>
                    </a>
                  </li>
                )}
              </>
            )
          })
        }
      </ul>
    </nav>
  </Fragment>

  <Fragment slot="header">
  <h1>Path of Exile <Fragment set:html={pageHeaderVersion} /> starter builds collection (Razunter's picks)</h1>
    {
      version.wip ||
        (version.note && (
          <div class="subtitle">
            {version.wip && 'Work in Progress!'}
            {version.note && version.note}
          </div>
        ))
    }
    {
      thisVersionNumber !== versionsData.currentVersion && (
        <div class="subtitle">
          old version, new version <a href="/index.html">here</a>
        </div>
      )
    }
  </Fragment>

  {
    currentTypes.map(([typekey, typename]) => {
      return (
        <>
          {(typekey !== 'rf' || !version.skiprf) && (
            <section id={typekey} class="section">
              <h2 class="section-title">
                <svg class="icon" role="img" aria-hidden="true">
                  <use />
                </svg>
                {typename}
              </h2>
              <div class="builds-collection">
                <BuildList
                  collection={data.buildList.find((item) => {
                    return item.type === typekey
                  })}
                  currentVersionNumber={thisVersionNumber}
                  allVersionsData={versionsData.versions}
                />
              </div>
            </section>
          )}
        </>
      )
    })
  }

  <Fragment slot="footer">
    <ul class="previous-links">
      <li class="nav-description">Version:</li>
      {/* {% for v in versions.versions | limit(3) | reverse %}*/}
      {/* {% if v.version == thisVersionNumber %}*/}
      {/* <li class="active">*/}
      {/*    {% else %}*/}
      {/* <li>*/}
      {/*    {% endif %}*/}
      {/*    {% if loop.first %}*/}
      {/*    <a href="index.html">Current ({{v.version}})</a>*/}
      {/*    {% else %}*/}
      {/*    <a href="old-{{ v.version }}.html">{{v.version}}</a>*/}
      {/*    {% endif %}*/}
      {/* </li>*/}
      {/* {% if not loop.last %}*/}
      {/* <li class="separator">|</li>*/}
      {/* {% endif %}*/}
      {/* {% endfor %}*/}
    </ul>
    <ul class="footer-links">
      <li>
        <a href="https://www.pathofexile.com/" target="_blank" rel="noopener"
          >Path of Exile</a
        >
      </li>
      <li>
        Site created by <a
          href="mailto:razunter@gmail.com"
          title="razunter@gmail.com">Razunter</a
        >
      </li>
    </ul>
  </Fragment>
</Layout>
